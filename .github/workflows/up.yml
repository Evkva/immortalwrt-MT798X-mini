name: "上传所有 Releases 中的固件到 WebDAV（每个固件一个 ZIP）"

on:
  workflow_dispatch:  # 手动触发

jobs:
  upload-to-webdav:
    runs-on: ubuntu-22.04
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 zip 工具
      run: |
        sudo apt-get update
        sudo apt-get install -y zip

    - name: 获取所有 Releases
      run: |
        # 获取所有 Releases（分页获取，GitHub API 每页最多 100 条）
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100" > releases.json

        # 检查是否获取到 Releases
        if [ ! -s releases.json ]; then
          echo "错误：未找到任何 Releases"
          exit 1
        fi

    - name: 下载、分别压缩为 ZIP 并上传到 WebDAV
      run: |
        # 遍历所有 Releases
        jq -c '.[]' releases.json | while read -r release; do
          # 提取 Release 标签和资产
          RELEASE_TAG=$(echo "$release" | jq -r '.tag_name')
          echo "处理 Release: $RELEASE_TAG"

          # 从标签名提取版本和机型（假设格式为 "MT7981 固件 23.05 - mt7981-clt-r30b1-112M"）
          VERSION=$(echo "$RELEASE_TAG" | grep -oE '[0-9]+\.[0-9]+' || echo "unknown")
          DEVICE=$(echo "$RELEASE_TAG" | grep -oE '[a-z0-9_-]+$' || echo "unknown-device")
          echo "版本: $VERSION, 机型: $DEVICE"

          # 提取所有 .bin 文件的下载 URL
          echo "$release" | jq -r '.assets[] | select(.name | endswith(".bin")) | .browser_download_url' > assets_urls.txt

          # 如果没有 .bin 文件，跳过
          if [ ! -s assets_urls.txt ]; then
            echo "Release $RELEASE_TAG 中未找到 .bin 文件，跳过"
            continue
          fi

          # 下载所有 .bin 文件并分别压缩
          while IFS= read -r url; do
            filename=$(basename "$url")
            echo "下载固件: $filename"
            curl -L -o "$filename" "$url"

            # 为每个 .bin 文件生成一个 .zip
            zip_filename="${filename%.bin}.zip"
            zip -r "$zip_filename" "$filename"
            echo "已压缩为: $zip_filename"

            # 上传到 WebDAV
            echo "上传 $zip_filename 到 WebDAV..."
            curl -v -u ${{ secrets.WEBDAV_USER }}:${{ secrets.WEBDAV_PASSWORD }} \
              -T "$zip_filename" \
              "${{ secrets.WEBDAV_URL }}/$VERSION/$DEVICE/$zip_filename" || {
                echo "上传 $zip_filename 失败"
                exit 1
              }
            echo "成功上传: $zip_filename"

            # 清理文件，避免空间不足
            rm -f "$filename" "$zip_filename"
          done < assets_urls.txt
        done
